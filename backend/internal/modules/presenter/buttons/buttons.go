package buttons

import tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"

type Button struct {
	Text string
	Data string
}

// InlineKeyboard –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ç–æ–≤—É—é –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
func InlineKeyboard(buttons ...Button) tgbotapi.InlineKeyboardMarkup {
	rows := make([]tgbotapi.InlineKeyboardButton, len(buttons))
	for i, btn := range buttons {
		rows[i] = tgbotapi.NewInlineKeyboardButtonData(btn.Text, btn.Data)
	}
	return tgbotapi.NewInlineKeyboardMarkup(rows)
}

// —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ç–æ–ª–±–∏–∫
func InlineKeyboardColumn(buttons ...Button) tgbotapi.InlineKeyboardMarkup {
	var rows [][]tgbotapi.InlineKeyboardButton
	for _, btn := range buttons {
		row := tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData(btn.Text, btn.Data),
		)
		rows = append(rows, row)
	}
	return tgbotapi.InlineKeyboardMarkup{InlineKeyboard: rows}
}

// –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
var (
	MenuButton       = Button{Text: "üìú –ú–µ–Ω—é", Data: "menu"}
	PromotionsButton = Button{Text: "üî• –ê–∫—Ü–∏–∏", Data: "promotions"}
	ReviewsButton    = Button{Text: "‚≠ê –û—Ç–∑—ã–≤—ã", Data: "reviews"}
)

// –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –º–µ–Ω—é
var (
	ShawarmaButton = Button{Text: "–®–∞—É—Ä–º–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç", Data: "shawarma"}
	DrinksButton   = Button{Text: "–ù–∞–ø–∏—Ç–∫–∏", Data: "drinks"}
	DessertsButton = Button{Text: "–î–µ—Å–µ—Ä—Ç—ã", Data: "desserts"}
	BackButton     = Button{Text: "–ù–∞–∑–∞–¥", Data: "back"}
)
