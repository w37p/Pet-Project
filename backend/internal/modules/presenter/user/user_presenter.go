package user

import (
	"fmt"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type UserPresenter struct {
	bot *tgbotapi.BotAPI
}

func NewUserPresenter(bot *tgbotapi.BotAPI) *UserPresenter {
	return &UserPresenter{bot: bot}
}

// PresentError –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
func (p *UserPresenter) PresentError(chatID int64, errorMsg string) error {
	msgText := fmt.Sprintf("üö´ –û—à–∏–±–∫–∞: %s", errorMsg)
	msg := tgbotapi.NewMessage(chatID, msgText)
	_, err := p.bot.Send(msg)
	return err
}

// PresentWelcomeMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Web App –∫–Ω–æ–ø–∫–æ–π.
// miniAppURL ‚Äî —ç—Ç–æ HTTPS URL –º–∏–Ω–∏‚Äë–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
func (p *UserPresenter) PresentWelcomeMessage(chatID int64, firstName, miniAppURL string) error {
	text := fmt.Sprintf("–ü—Ä–∏–≤–µ—Ç, %s! –ù–∞ —Å–≤—è–∑–∏ —Å–ª—É–∂–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ \"–†—ã–±–∞ –∏ –†–∏—Å\".\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑.", firstName)
	webAppButton := tgbotapi.NewInlineKeyboardButtonWebApp("–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑", tgbotapi.WebAppInfo{
		URL: miniAppURL,
	})
	keyboard := tgbotapi.NewInlineKeyboardMarkup(tgbotapi.NewInlineKeyboardRow(webAppButton))
	msg := tgbotapi.NewMessage(chatID, text)
	msg.ReplyMarkup = keyboard
	_, err := p.bot.Send(msg)
	return err

}
